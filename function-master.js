//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
/**
 * I: function objectValues takes an object as a parameter
 * O: return the object as an array
 * C:
 * E:
 */
    return Object.values(object)
    // code
} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
/**
 * I: function keysToString  take an object parameter
 * O: return the keys in the object and return a string
 * C: each key in string is seperated by a space
 * E:
 */

return Object.keys(object).join(" ")

}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
/**
 * I: function valuesToString takes an object parameter
 * O: return the object values into a string
 * C: each value in string is seperated by a space
 * E:
 */
    
return Object.values(object).join(" ")

}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
/**
 * I: function arrayOrObject takes collections as parameters
 * O: return if array is an array or if object is anb object
 * C:
 * E: takes one argument (array or object)
 */

if (Array.isArray(collection)){
    return "array"
} else if (typeof collection === 'object'){
    return "object"
}
    
}

//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
/**
 * I: function capitalizeWord takes a string (which is one word)
 * O: retirm string with the first letter capitalize
 * C:
 * E:
 */

return string.charAt(0).toUpperCase() + string.slice(1)

}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
/**
 * I: function capitalizeAllWords takes a string parameter
 * O: return all the words with the first letter caplizaed
 * C:
 * E:
 */

for(var i = 0; i < string.length; ){
    return string.charAt(0).toUpperCase() + string.slice(1)
}

}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, array) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {
/**
 * I: function
 * O: 
 * C:
 * E:
 */
}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}